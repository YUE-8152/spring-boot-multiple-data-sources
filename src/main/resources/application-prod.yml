server:
  port: 8082

#Mybatis 控制台打印SQL语句
logging:
  level:
    com.lcb.springcloud.learning: debug

spring:
  autoconfigure:
    exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure
  datasource:
    dynamic:
      primary: master
      datasource:
        master:
          driver-class-name: com.mysql.jdbc.Driver
          url: jdbc:mysql://localhost:3306/mytest?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false
          username: root
          password: 123456
        # 从库数据源
        slave:
          driver-class-name: com.mysql.jdbc.Driver
          url: jdbc:mysql://localhost:3306/mydb?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false
          username: root
          password: 123456
      druid:
        # 初始化时建立物理连接的个数
        initial-size: 5
        # 最大连接池数量
        max-active: 20
        # 最小连接池数量
        min-idle: 5
        # 获取连接时最大等待时间
        max-wait: 60000
        # 是否缓存preparedStatement，也就是PSCache。
        pool-prepared-statements: false
        # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
        max-pool-prepared-statement-per-connection-size: -1
        # 用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。
        validation-query: SELECT 'x'
        # 单位：秒，检测连接是否有效的超时时间。
        validation-query-timeout: 1
        # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
        test-on-borrow: false
        # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
        test-on-return: false
        # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
        test-while-idle: true
        # 有两个含义：1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
        time-between-eviction-runs-millis: 6000
        # 连接保持空闲而不被驱逐的最小时间
        min-evictable-idle-time-millis: 1800000
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
        filters: stat,wall,slf4j
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
        # 合并多个DruidDataSource的监控数据
        #useGlobalDataSourceStat: true
    druid:
      # 监控页面相关配置,可通过 http://localhost:8081/druid/index.html 访问
      stat-view-servlet:
        enabled: true  # 开启访问监控控制台
        url-pattern: /druid/*
        login-username: admin
        login-password: 123456
        allow: 127.0.0.1  # 白名单
        #deny: 127.0.0.1  # 黑名单
        reset-enable: false